{
module Test.Lexer
open System
open Test.Parser
}

rule token =
  parse
  | '\n'                   { lexbuf.EndPos <- lexbuf.EndPos.NextLine
                             token lexbuf }
  | [' ' '\r' '\t']+       { token lexbuf }
  | "if"                   { IF }
  | "then"                 { THEN }
  | "else"                 { ELSE }
  | ['a' - 'z' 'A' - 'Z']+ { IDENT lexbuf.Lexeme }
  | ['0' - '9']+           { NUMBER (int lexbuf.Lexeme) }
  | '+'                    { PLUS }
  | '-'                    { MINUS }
  | '*'                    { STAR }
  | "::"                   { COLONCOLON }
  | ".."                   { DOTDOT }
  | eof                    { EOF }
  | _                      { failwith "lexical error" }