%{
open Test.Ast
%}

%token <string> IDENT
%token <int> NUMBER
%token <string> STRING
%token PLUS
%token MINUS
%token STAR
%token COLONCOLON
%token DOTDOT
%token IF
%token THEN
%token ELSE
%token EOF

%nonassoc IfThen
%nonassoc ELSE BAR
%right COLONCOLON
%nonassoc DOTDOT
%left PLUS MINUS
%left STAR
%nonassoc Uminus

%start Start

%%

Start <Expr> : Expr EOF { $1 }

Expr:
    | IDENT                          { Ident $1 }
    | NUMBER                         { Number $1 }
    | STRING                         { String $1 }
    | Expr PLUS Expr                 { Add ($1, $3) }
    | Expr MINUS Expr                { Sub ($1, $3) }
    | Expr STAR Expr                 { Mult ($1, $3) }
    | Expr COLONCOLON Expr           { Cons ($1, $3) }
    | Expr DOTDOT Expr               { Range ($1, $3) }
    | MINUS Expr %prec Uminus        { Neg $2 }
    | IF Expr THEN Expr ELSE Expr    { If ($2, $4, Some $6) }
    | IF Expr THEN Expr %prec IfThen { If ($2, $4, None) }